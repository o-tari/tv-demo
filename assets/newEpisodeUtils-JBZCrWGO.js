function u(e,n){if(!e||n.length===0)return{hasNewEpisodes:!1,newEpisodesCount:0};const o=new Date,r=n.filter(s=>!s.air_date||new Date(s.air_date)>o?!1:s.season_number>e.seasonNumber||s.season_number===e.seasonNumber&&s.episode_number>e.episodeNumber),t=r.sort((s,a)=>s.season_number!==a.season_number?s.season_number-a.season_number:s.episode_number-a.episode_number);return{hasNewEpisodes:r.length>0,latestEpisode:t[t.length-1],newEpisodesCount:r.length}}function c(e){if(!e)return!1;const n=new Date;return new Date(e)>n}function f(e){if(!e)return"";try{const n=new Date(e);return isNaN(n.getTime())?e:n.toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}catch{return e}}async function m(e,n,o){const r=[];try{for(const t of o){const s=await e.getSeasonDetails(n,t.season_number);s.episodes&&r.push(...s.episodes)}}catch(t){console.error("Error fetching episodes for TV show:",t)}return r}export{u as c,f,m as g,c as i};
